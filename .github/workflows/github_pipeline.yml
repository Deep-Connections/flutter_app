name: Flutter CI/CD Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, dev ]

jobs:
  flutterTests:
    runs-on: ubuntu-latest
    if: false
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.5'
          cache: true
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:'
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
          pub-cache-key: 'flutter-pub:os:-:channel:-:version:-:arch:-:hash:'

      - name: Install dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

  firestoreTests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        
      - name: Setup Firebase
        uses: ./.github/actions/firebase_setup
        with:
          work_dir: 'firebase'

      - name: Firestore test
        run: firebase emulators:exec --only firestore 'cd firebase && npm test'

  jsFunctionsTests:
    runs-on: ubuntu-latest
    if: false
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        
      - name: Setup Firebase
        uses: ./.github/actions/firebase_setup
        with:
          work_dir: 'functions/javascript'

      - name: Javascript function tests
        run: firebase emulators:exec --only firestore,storage,auth 'cd functions/javascript && npm test'

  deployFirestoreRules:
    needs: firestoreTests
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        
      - name: Setup Firebase
        uses: ./.github/actions/firebase_setup
        with:
          work_dir: 'firebase'
          credentials_json: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_DEEP_CONNECTIONS_7796D }}'

      - name: Skip Predeploy
        run: perl -pi -e 's/"predeploy"/"predeploy-disabled"/g' firebase.json

      - name: Firestore deploy
        run: firebase deploy --only firestore:rules

  deployJsFunctions:
    needs: jsFunctionsTests
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        
      - name: Setup Firebase
        uses: ./.github/actions/firebase_setup
        with:
          work_dir: 'functions/javascript'
          credentials_json: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_DEEP_CONNECTIONS_7796D }}'

      - name: Skip Predeploy
        run: perl -pi -e 's/"predeploy"/"predeploy-disabled"/g' firebase.json

      - name: Firestore deploy
        run: firebase deploy --only functions:javascript-functions

  deployWeb:
    needs: [flutterTests, deployFirestoreRules, deployJsFunctions]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.5'
          cache: true
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:'
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
          pub-cache-key: 'flutter-pub:os:-:channel:-:version:-:arch:-:hash:'

      - name: Flutter Build Web
        run: flutter build web --release

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_DEEP_CONNECTIONS_7796D }}'
          channelId: live
          projectId: deep-connections-7796d
